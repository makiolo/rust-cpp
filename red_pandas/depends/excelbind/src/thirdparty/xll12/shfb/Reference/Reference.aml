<?xml version="1.0" encoding="utf-8"?>
<topic id="33c94631-5dc8-4fac-bd60-40ac43616b90" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>Documentation for the xll library classes.</para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>General Considerations</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>The basic
        data structure is a C struct called <codeInline>XLOPER</codeInline>.
        It represents a *cell* or *range* of cells in a spreadsheet.
        A cell can be a number, string, boolean, reference, error,
        or integer. A range is a two dimensional array of cells having
        at most 64K rows and 256 columns.
        </para><para>
        Excel 2007 introduced a new C struct, 
        <codeInline>XLOPER12</codeInline>, that
        allows wide-character strings and ranges
        that can have up to 1M rows and 64K columns.
        </para>
        <para>
        To write code that can be built for either old or new
        versions of Excel use <codeInline>XLOPERX</codeInline>.
        It defaults to <codeInline>XLOPER</codeInline> when you
        include <codeInline>xll.h</codeInline>. If you 
        <codeInline>#define EXCEL12</codeInline> before including
        this header it becomes <codeInline>XLOPER12</codeInline>.
        </para>
        <para>
        The library defines the C++ classes 
        <codeInline>OPER/OPER12</codeInline>. They are
        <codeInline>XLOPER</codeInline>s with constructors,
        destructors, and member functions that to make them behave like
        C++ built-in types. Even though C++ is strongly typed,
        <codeInline>OPER</codeInline>s act as variant types.
        </para>
        <para>
        Connecting Excel to your C++ code is accomplished by the
        class <codeInline>AddIn/AddIn12/AddInX</codeInline>. It
        tells Excel the return type, what name to use, and what 
        the arguments are.
        </para>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>