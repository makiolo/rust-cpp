<?xml version="1.0" encoding="utf-8"?>
<topic id="1ec286b2-14da-4e95-bce6-abb47f589578" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>An Excel add-in is a dynamic-link library (<codeInline>.dll</codeInline>) that
      contains some well-known functions. If you rename the suffix to
      <codeInline>.xll</codeInline> it will show up in the Excel file open filter.</para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>xlAutoOpen</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>
        When Excel opens an <codeInline>.xll</codeInline> it calls
        <externalLink>
        <linkText><codeInline>LoadLibrary</codeInline></linkText>
        <linkUri>https://msdn.microsoft.com/en-us/library/windows/desktop/ms684175(v=vs.85).aspx</linkUri>
        <linkTarget>_blank</linkTarget>
        </externalLink>
        and
        <externalLink>
        <linkText><codeInline>GetProcAddress</codeInline></linkText>
        <linkUri>https://msdn.microsoft.com/en-us/library/windows/desktop/ms683212(v=vs.85).aspx</linkUri>
        <linkTarget>_blank</linkTarget>
        </externalLink>
        to find <codeInline>xlAutoOpen</codeInline> and then calls it. You can write your own
        <codeInline>xlAutoOpen</codeInline> to register functions with Excel but this library
        implements that for you. All you need to do is instanciate an <codeInline>xll::AddIn</codeInline>
        object that tells Excel how to call the C/C++ function that you implement.
        </para>
        <para>
        You can also use <codeInline>xll::Auto&lt;Open&gt;</codeInline> to have your functions called
        as long as they take no arguments and return an <codeInline>int</codeInline>, just
        like <codeInline>xlAutoOpen</codeInline>.
        
        </para>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>